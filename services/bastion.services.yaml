
AWSTemplateFormatVersion: "2010-09-09"

Description: "Xxxxxx Bastion host services stack"
Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the Elastic Beanstalk and Bastion hosts"
    Type: "AWS::EC2::KeyPair::KeyName"
  BastionInstanceType:
    Description: "Bastion Host EC2 instance type"
    Type: "String"
    Default: "t2.nano"
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    ConstraintDescription: "must be a valid EC2 instance type."
  PublicSubnet1:
    Description: "A public VPC subnet ID."
    Type: "String"
  VPCId:
    Description: "A VPC ID."
    Type: "String"
  ServiceADPW:
    NoEcho: "true"
    Description: "MS AD service user password (xxxxxxxxxxxxdap)"
    Type: "String"
  MicrosoftADName:
    Description: "The domain name of ActiveDirectory domain in CAPITAL LETTERS."
    Type: "String"
    Default: "AD.xxxxxxx.cloud"
  HostedZoneName:
    Description: "The domain name of the hosted zone managed by AWS Route53."
    Type: "String"
    Default: "xxxxxxx.cloud"
  Route53HostedZoneID:
    Description: "Route53 Hosted Zone ID"
    Type: "String"
  AssetsBucketName:
    Description: "The name of the S3 bucket where files are located."
    Type: "String"
    Default: "xx-systemzzz"
  BastionTtyRecVolume:
    Description: "Volume for attaching to Bastion Host for TtyRec files. Must be created in the same zone as VPCAvailabilityZone1 and formatted with proper FS"
    Type: "String"
  XxxxxSubnet1:
    Description: "A private VPC subnet ID in AZ1."
    Type: "String"
  XxxxxSubnet2:
    Description: "A private VPC subnet ID in AZ2"
    Type: "String"
  XxxxxSubnet3:
    Description: "A private VPC subnet ID in AZ3"
    Type: "String"
  XxxxxSubnet4:
    Description: "A private VPC subnet ID in AZ4"
    Type: "String"
  XxxxxSubnet5:
    Description: "A private VPC subnet ID in AZ5"
    Type: "String"
  XxxxxSubnet6:
    Description: "A private VPC subnet ID in AZ6"
    Type: "String"
  EFSforHOMESecurityGroup:
    Description: "EFS for HOME directories Security group"
    Type: "String"
  BastionSecurityGroup:
    Description: "Bastion host Security group"
    Type: "String"
  DBNATGoogleDataStudioSecurityGroup:
    Description: "Security Group for allow Google Data Studio to connect DB through NAT on bastion"
    Type: "String"
  Prod7AuroraRDS:
    Description: "The connection endpoint for the Xxxxxx RDS MySQL PHP-7 Production aurora database"
    Type: "String"
  MailOutSGid:
    Description: "ID of Xxxxxx Main Outbound to Mail Relay servers security group"
    Type: String

Mappings:
  BastionAMI:
    'ap-northeast-1':
      AMI: 'ami-xxxx'
    'ap-northeast-2':
      AMI: 'ami-xxxx'
    'ap-southeast-1':
      AMI: 'ami-xxxx'
    'ap-southeast-2':
      AMI: 'ami-xxxx'
    'eu-central-1':
      AMI: 'ami-xxxx'
    'eu-west-1':
      AMI: 'ami-xxxx'
    'sa-east-1':
      AMI: 'ami-xxxx'
    'us-east-1':
      AMI: 'ami-xxxx'
    'us-west-1':
      AMI: 'ami-xxxx'
    'us-west-2':
      AMI: 'ami-xxxx'

Resources: 
  EFSforHOME: 
    Type: "AWS::EFS::FileSystem"
    DeletionPolicy: "Retain"
    Properties: 
      FileSystemTags:
      - Key: "Name"
        Value: "EFS for HOME directories"
  # Mass deleted
  BastionIAMInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
      - !Ref "BastionIAMRole"
  BastionIPAddress:
    Type: "AWS::EC2::EIP"
    Properties: 
      Domain: "vpc"
      InstanceId: !Ref "BastionHost"
  BastionHost: 
    Type: "AWS::EC2::Instance"
    DependsOn:
    - "EFSforHOME"
    - "EFSforHOMEMountTarget1"
    - "EFSforHOMEMountTarget2"
    Properties:
      Volumes:
      - VolumeId: !Ref "BastionTtyRecVolume"
        Device: "/dev/sdf"
      InstanceType: !Ref "BastionInstanceType"
      KeyName: !Ref "KeyName"
      SubnetId: !Ref "PublicSubnet1"
      ImageId: !FindInMap [BastionAMI, !Ref 'AWS::Region', AMI]
      SecurityGroupIds:
      - !Ref BastionSecurityGroup
      - !Ref DBNATGoogleDataStudioSecurityGroup
      - !Ref MailOutSGid
      IamInstanceProfile: !Ref "BastionIAMInstanceProfile"
      Tags:
      - Key: "Name"
        Value: !Sub '${AWS::StackName}'
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -xe
          # deleted
          chmod 755 /etc/init.d/cfn-hup
          update-rc.d cfn-hup defaults
          cfn-init -v --stack ${AWS::StackId} --resource BastionHost --configsets SetupConfigSet --region ${AWS::Region}
          cfn-signal -e $? --stack ${AWS::StackId} --resource BastionHost --region ${AWS::Region}
          /sbin/reboot
    Metadata:
      "AWS::CloudFormation::Init":
        configSets:
          SetupConfigSet:
          - "setup-cfn"
          - "setupldap"
          - "ttyrec"
          # Mass deleted
          UpdateConfigSet:
          - disable-apport
          - mount-s3fs-home
          # Mass deleted
        disable-apport:
          files:
            '/etc/default/apport':
              content: |
                enabled=0
          commands:
            00_disable_apport:
              command: !Sub |
                service apport stop
        low-disk-alert:
          files:
            '/etc/cron.hourly/low-disk-alert':
              content: |
                #!/bin/bash
                deleted
                fi
              mode: '000755'
              owner: root
              group: root
        setup-aws-ssm-agent:
          files:
            '/tmp/amazon-ssm-agent.deb':
              source:
                'Fn::Sub': "https://amazon-ssm-${AWS::Region}.s3.amazonaws.com/latest/debian_amd64/amazon-ssm-agent.deb"
              mode: '000644'
              owner: root
              group: root
          commands:
            00_setup_aws_ssm_agent:
              command:
                'Fn::Sub': |
                  dpkg -i /tmp/amazon-ssm-agent.deb
                  systemctl enable amazon-ssm-agent.service
                  sed -i '/console formatid="fmtinfo"/d' /etc/amazon/ssm/seelog.xml.template
                  mv /etc/amazon/ssm/seelog.xml.template /etc/amazon/ssm/seelog.xml
                  service amazon-ssm-agent restart
        setup-cfn:
          files:
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: "000400"
              owner: "root"
              group: "root"
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.BastionHost.Metadata.AWS::CloudFormation::Init
                action=cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=BastionHost  --configsets UpdateConfigSet
                runas=root
              mode: "000400"
              owner: "root"
              group: "root"
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                - '/etc/cfn/cfn-hup.conf'
                - '/etc/cfn/hooks.d/cfn-auto-reloader.conf'
        setupldap:
          packages:
            apt:
              sssd: []
              samba-common-bin: []
              samba-libs: []
              sssd-tools: []
              krb5-user: []
              adcli: []
              realmd: []
              chrony: []
              ntpdate: []
              libsss-sudo: []
              packagekit: []
              ldap-utils: []
              ldapscripts: []
          files:
            '/etc/krb5.conf':
              content: !Sub |
                [libdefaults]
                deleted
              mode: '000644'
              owner: root
              group: root
            '/etc/sssd/sssd.conf':
              content: !Sub |
                [sssd]
                deleted
              mode: '00600'
              owner: root
              group: root
          commands:
            00_setup_ad_login:
              command: !Sub |
                deleted
                chmod 440 /etc/sudoers.d/domain_admins
                chmod 700 /home/ubuntu
                service sssd restart
                service ssh restart
        ttyrec:
          packages:
            apt:
              ttyrec: []
          commands:
            00_setup_ttyrec:
              command: !Sub |
                /usr/sbin/useradd -r -d /var/log/ttyrec -s /sbin/nologin ttyrec
                mkdir -p /var/log/ttyrec
                mount /dev/xvdc /var/log/ttyrec
                echo "/dev/xvdc /var/log/ttyrec/ xfs defaults 0 0" >> /etc/fstab
                chmod -R 700 /var/log/ttyrec
                chown -R ttyrec:ttyrec /var/log/ttyrec
                chmod g+s /var/log/ttyrec
                chown ttyrec:ttyrec /usr/bin/ttyrec
                chmod u+s /usr/bin/ttyrec
        ssh-banner:
          commands:
            00_setup_ssh_banner:
              command: !Sub |
                deleted
                systemctl restart ssh
        servers-describe:
          files:
            /usr/local/bin/servers-describe.sh:
              content: !Sub |
                #!/bin/bash
                umask 022
                deleted
                sleep 10
                /bin/mv $tmpfile $_outfile
              mode: "000700"
              owner: "root"
              group: "root"
            /etc/cron.d/servers:
              content: !Sub |
                5-55/10 * * * * root bash /usr/local/bin/servers-describe.sh
              mode: "000640"
              owner: "root"
              group: "root"
            /etc/profile.d/Z100_XxxxxxXxxxxxXxxxxx.sh:
              content: !Sub |
                #!/bin/bash
                alias servers="cat /var/servers.txt"
                deleted
                /bin/bash
                exit 0
                fi
              mode: "000755"
              owner: "root"
              group: "root"
          commands:
            00_set_server_alias:
              command: !Sub |
                echo 'alias servers="cat /var/servers.txt"' >> /etc/bash.bashrc
        mount-s3fs-home:
          packages:
            apt:
              fuse: []
              libfuse-dev: []
              libc6: []
              libcurl3: []
              libcurl3-gnutls: []
              libcurl3-openssl-dev: []
              libfuse2: []
              libgcc1: []
              libgcrypt20: []
              libgnutls30: []
              libstdc++6: []
              libxml2: []
              libxml2-dev: []
              mime-support: []
              openssl: []
              libssl-dev: []
          files:
            "/usr/bin/s3fs":
              source: https://xx-systemzzz.s3.amazonaws.com/s3fs/1.85/s3fs
              owner: root
              group: root
              mode: '000755'
            "/usr/share/man/man1/s3fs.1":
              source: https://xx-systemzzz.s3.amazonaws.com/s3fs/1.85/s3fs.1
              owner: root
              group: root
              mode: '000644'
          commands:
            10_mount_s3fs:
              test: "! mount | grep '/mnt/home type fuse.s3fs'"
              command: |
                mkdir -p /mnt/home
                s3fs -o iam_role xx-systemzzz-home-folders /mnt/home
            20_persist_s3fs_mount:
              test: "! grep 's3fs#xx-systemzzz-home-folders' /etc/fstab"
              command: |
                sed '/\/home\/ nfs4/d' -i /etc/fstab
                echo 's3fs#xx-systemzzz-home-folders /mnt/home fuse _netdev,allow_other,iam_role 0 0' | tee -a /etc/fstab
        setupntp:
          packages:
            apt:
              chrony: []
              ntpdate: []
          files:
            '/etc/chrony/chrony.conf':
              content: !Sub |
                deteled
                rtconutc
              mode: '000644'
              owner: root
              group: root
          commands:
            00_setup_ntp:
              command: !Sub |
                service chrony stop
                ntpdate xxxxxx
                service chrony start
          services:
            sysvinit:
              chrony:
                enabled: true
                ensureRunning: true
                files:
                - '/etc/chrony/chrony.conf'
        remount-proc-fs:
          commands:
            00_remount-proc-fs:
              command: !Sub |
                deleted
                echo "proc /proc proc defaults,hidepid=2 0 0" >> /etc/fstab
        sethostname:
          commands:
            00_sethostname:
              command: !Sub |
                hostnamectl set-hostname bastion.xxxxxxx.cloud
        install-mysql-client:
          packages:
            apt:
              mysql-client-5.7: []
        setup-google-data-studio-db-nat:
          packages:
            apt:
              syslinux-utils: []
          files:
            '/etc/sysctl.d/60-xxxnat.conf':
              content: !Sub |
                net.ipv4.ip_forward=1
              mode: '000644'
              owner: root
              group: root
            /usr/local/bin/db-nat.sh:
              content: !Sub |
                #!/bin/bash
                SHELL=/bin/sh
                PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
                deleted
                iptables -t nat -A POSTROUTING  -j MASQUERADE
              mode: "000700"
              owner: "root"
              group: "root"
            /etc/cron.d/db-nat:
              content: !Sub |
                @reboot root bash /usr/local/bin/db-nat.sh
                @hourly root bash /usr/local/bin/db-nat.sh
              mode: "000640"
              owner: "root"
              group: "root"
          commands:
            00_update_sysctl:
              command: !Sub |
                sysctl -p
                service procps restart

  BastionDNSRecord:
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneId: !Ref "Route53HostedZoneID"
      Comment: "Record for Bastion Host"
      Name: !Join [ "", [ "bastion",".", !Ref "HostedZoneName","."]]
      Type: "A"
      TTL: 300
      ResourceRecords:
      - !GetAtt BastionHost.PrivateIp

Outputs:
  BastionPublicIPAddress: 
    Description: "Public IP address of the Bastion host"
    Value: !Ref "BastionIPAddress"
    Export:
      Name: !Sub '${AWS::StackName}-BastionPublicIPAddress'
  EFSforHOMEid:
    Description: "ID of AWS EFS for HOME directories"
    Value: !Ref "EFSforHOME"
    Export:
      Name: !Sub '${AWS::StackName}-EFSforHOME'
  BastionServicesStackName:
    Description: "Bastion Services Stack Name"
    Value: !Ref "AWS::StackName"
