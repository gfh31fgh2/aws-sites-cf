AWSTemplateFormatVersion: "2010-09-09"
Description: "ALB stack for use with the app stack"
Parameters:
  VPCId:
    Description: 'A VPC ID.'
    Type: String
  ALBCert:
    Description: 'SSL certificate ID in AWS Certificate Manager'
    Type: String
  PublicSubnet1:
    Description: 'A public VPC subnet ID in AZ1'
    Type: String
  PublicSubnet2:
    Description: 'A public VPC subnet ID in AZ2'
    Type: String
  PublicSubnet3:
    Description: 'A public VPC subnet ID in AZ3'
    Type: String
  PublicSubnet4:
    Description: 'A public VPC subnet ID in AZ4'
    Type: String
  PublicSubnet5:
    Description: 'A public VPC subnet ID in AZ5'
    Type: String
  PublicSubnet6:
    Description: 'A public VPC subnet ID in AZ6'
    Type: String
  ALBName:
    Description: 'ALB Name'
    Type: String
  TGName:
    Description: "TG Name"
    Type: String
  ALBSG:
    Description: "ALB Security Group"
    Type: String
  OperatorEMail:
    Description: 'EMail address to notify if there are any scaling operations'
    Type: String
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: 'must be a valid email address.'

Resources:
  SNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEMail
          Protocol: email

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '300'
      Name: !Ref ALBName
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSG
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3
        - !Ref PublicSubnet4
        - !Ref PublicSubnet5
        - !Ref PublicSubnet6
      Type: application

  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TG
          Type: forward
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Sub 'arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/${ALBCert}'
      DefaultActions:
        - TargetGroupArn: !Ref TG
          Type: forward
      LoadBalancerArn: !Ref ALB
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-2017-01

  TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Ref TGName
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /elbhealthcheck.php
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !Ref VPCId
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 90
        - Key: slow_start.duration_seconds
          Value: 300

#  UnHealthyHostCountAlarm:
#    Type: 'AWS::CloudWatch::Alarm'
#    Properties:
#      AlarmDescription: Alarms when there is any unhealthy target
#      MetricName: UnHealthyHostCount
#      Namespace: AWS/ApplicationELB
#      ComparisonOperator: GreaterThanOrEqualToThreshold
#      Dimensions:
#        - Name: TargetGroup
#          Value: !GetAtt TG.TargetGroupFullName
#        - Name: LoadBalancer
#          Value: !Join
#            - '/'
#            - - 'app'
#              - !Select [2, !Split [ '/', !Select [5, !Split [':', !Select [0, !GetAtt TG.LoadBalancerArns]]]]]
#              - !Select [3, !Split [ '/', !Select [5, !Split [':', !Select [0, !GetAtt TG.LoadBalancerArns]]]]]
#      EvaluationPeriods: '3'
#      Period: '60'
#      Statistic: Maximum
#      Threshold: '1'
#      AlarmActions:
#        - !Ref SNSTopic
#      InsufficientDataActions:
#        - !Ref SNSTopic

Outputs:
  TG:
    Value: !Ref TG
    Description: 'Target Group ARN'
    Export:
      Name: !Sub "${TGName}-TG"
